#!/bin/bash

# createRootFile.sh - Automatically generate src/index.ts from protobuf files in gen/
# Usage: ./bin/createRootFile.sh

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Get the script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

GEN_DIR="$PROJECT_ROOT/gen"
SRC_DIR="$PROJECT_ROOT/src"
INDEX_FILE="$SRC_DIR/index.ts"

echo -e "${BLUE}🔧 Brizy Protogen TypeScript - Index Generator${NC}"
echo -e "${BLUE}================================================${NC}"

# Check if gen directory exists
if [ ! -d "$GEN_DIR" ]; then
    echo -e "${RED}❌ Error: gen/ directory not found at $GEN_DIR${NC}"
    echo -e "${YELLOW}💡 Make sure you have generated protobuf files in the gen/ directory${NC}"
    exit 1
fi

# Check if src directory exists, create if not
if [ ! -d "$SRC_DIR" ]; then
    echo -e "${YELLOW}📁 Creating src/ directory...${NC}"
    mkdir -p "$SRC_DIR"
fi

# Find all protobuf TypeScript files in gen directory
echo -e "${BLUE}🔍 Scanning for protobuf files in gen/...${NC}"
pb_files=($(find "$GEN_DIR" -name "*_pb.ts" -type f | sort))

if [ ${#pb_files[@]} -eq 0 ]; then
    echo -e "${RED}❌ No protobuf files (*_pb.ts) found in $GEN_DIR${NC}"
    exit 1
fi

echo -e "${GREEN}✅ Found ${#pb_files[@]} protobuf files:${NC}"
for file in "${pb_files[@]}"; do
    basename_file=$(basename "$file")
    echo -e "   📄 $basename_file"
done

# Generate the index.ts file
echo -e "${BLUE}📝 Generating $INDEX_FILE...${NC}"

cat > "$INDEX_FILE" << 'EOF'
// Brizy Protogen TypeScript Package
// Generated protobuf types for Brizy platform
// This file is auto-generated by bin/createRootFile.sh

EOF

# Add exports for each protobuf file
for file in "${pb_files[@]}"; do
    # Get relative path from src to gen
    rel_path="../gen/$(basename "$file" .ts)"

    # Get the base name without _pb suffix for better organization
    base_name=$(basename "$file" _pb.ts)
    # Capitalize first letter (compatible with older bash versions)
    capitalized_name="$(tr '[:lower:]' '[:upper:]' <<< ${base_name:0:1})${base_name:1}"

    echo "// ${capitalized_name} message types" >> "$INDEX_FILE"
    echo "export * from '$rel_path';" >> "$INDEX_FILE"
    echo "" >> "$INDEX_FILE"
done

# Add protobuf utilities export
cat >> "$INDEX_FILE" << 'EOF'
// Re-export protobuf utilities that might be useful
export { create, fromBinary, toBinary, fromJson, toJson } from '@bufbuild/protobuf';
export { type Any, anyPack, anyIs } from "@bufbuild/protobuf/wkt";
EOF

echo -e "${GREEN}✅ Successfully generated $INDEX_FILE${NC}"

# Show preview of generated file
echo -e "${BLUE}📖 Preview of generated index.ts:${NC}"
echo -e "${YELLOW}----------------------------------------${NC}"
head -20 "$INDEX_FILE"
if [ $(wc -l < "$INDEX_FILE") -gt 20 ]; then
    echo -e "${YELLOW}... (truncated)${NC}"
fi
echo -e "${YELLOW}----------------------------------------${NC}"

# Count exports
export_count=$(grep -c "export \* from" "$INDEX_FILE" || true)
echo -e "${GREEN}📊 Generated $export_count export statements${NC}"

echo -e "${BLUE}🎉 Index file generation complete!${NC}"
echo -e "${YELLOW}💡 You can now build the package with: npm run build${NC}"
